(()=>{"use strict";class t{constructor(){this.boardSize=10,this.coordinates=new Map,this.AttackStorage=[],this.missedAttacks=[],this.playerboard=this.createBoard()}createBoard(){const t=[];for(let e=0;e<this.boardSize;e++){const e=[];for(let t=0;t<this.boardSize;t++)e.push(0);t.push(e)}return t}placeShip(t){for(const e of t){let o=0;const r=t.indexOf(e);console.log();let a=[];for(let t=0;t<e.length;t++)console.log([o+t,r]),a.push([o+t,r]);o++,this.AddShipCoords(e,a)}}AddShipCoords(t,e){this.coordinates.set(t,e)}receiveAttack(t,e){for(let e=0;e<this.AttackStorage.length;e++)if(JSON.stringify(t)==JSON.stringify(this.AttackStorage[e]))return!1;const o=document.querySelector(".container").querySelector(`.${e}`);let r=!1;this.coordinates.forEach(((e,a)=>{e.forEach(((s,c)=>{s[0]===t[0]&&s[1]===t[1]&&(a.hit(),e.splice(c,1),this.checkSunk(),r=!0,o.querySelectorAll(".cell").forEach((e=>{const o=JSON.parse(e.getAttribute("data-coordinate"));o[0]===t[0]&&o[1]===t[1]&&(e.style.backgroundColor="red")})))}))})),r||(this.missedAttacks.push(t),o.querySelectorAll(".cell").forEach((e=>{const o=JSON.parse(e.getAttribute("data-coordinate"));o[0]===t[0]&&o[1]===t[1]&&(e.style.backgroundColor="blue")}))),this.AttackStorage.push(t)}checkSunk(){let t=!0;return this.coordinates.forEach((e=>{e.length>0&&(t=!1)})),t}}class e{constructor(t,e=0,o=!1){this.length=t,this.numOfHits=e,this.sunk=o}hit(){this.numOfHits!==this.length&&this.numOfHits++,this.numOfHits===this.length&&this.isSunk()}isSunk(){this.sunk=!0}}class o{constructor(o){this.word=o,this.gameBoard=new t(o),this.PlayerShips=[new e(5),new e(4),new e(3),new e(3),new e(2)]}attack(t){this.gameBoard.receiveAttack(t,this.word)}makeRandomAttack(t){const e=this.gameBoard.boardSize;let o,r=!0;for(;r;){o=[Math.floor(Math.random()*e),Math.floor(Math.random()*e)],r=!1;for(let t=0;t<this.gameBoard.AttackStorage.length;t++)if(JSON.stringify(o)===JSON.stringify(this.gameBoard.AttackStorage[t])){r=!0;break}}this.gameBoard.receiveAttack(o,t)}gameOver(){return this.gameBoard.checkSunk()}}const r=new o("one"),a=new o("two");function s(t){let e=document.querySelector(".container"),o=document.createElement("div");o.classList.add("grid",t),e.append(o);for(let t=0;t<10;t++){const e=[];for(let r=0;r<10;r++){const a=document.createElement("div");a.classList.add("cell"),a.setAttribute("data-coordinate",`[${t},${r}]`),o.appendChild(a),e.push(0)}}}r.gameBoard.placeShip(r.PlayerShips),a.gameBoard.placeShip(a.PlayerShips),s("one"),s("two");const c=document.querySelector(".two").querySelectorAll(".cell"),i=document.querySelector(".playerNum");function n(t){const e=t.target,o=e.getAttribute("data-coordinate");a.attack(JSON.parse(o),"two"),r.makeRandomAttack("one"),e.removeEventListener("click",n),function(){const t=a.gameOver();r.gameOver()?(i.textContent="Player 2 wins",c.forEach((t=>{t.removeEventListener("click",n)}))):t&&(i.textContent="Player 1 wins",c.forEach((t=>{t.removeEventListener("click",n)})))}()}c.forEach((t=>{t.addEventListener("click",n)}))})();